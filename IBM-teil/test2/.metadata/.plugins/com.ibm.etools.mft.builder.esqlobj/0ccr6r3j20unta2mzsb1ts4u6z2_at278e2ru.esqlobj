/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage(); 
		
		SET OutputRoot.HTTPResponseHeader  = InputRoot.HTTPInputHeader;
		-- DELETE FIELD OutputRoot.HTTPInputHeader WITH HTTPHEADER-NODE
		
		DECLARE var REFERENCE TO Environment.Variables;
        DECLARE product_id CHAR;
        DECLARE table_id CHAR;       
        DECLARE namebediener CHAR;
        DECLARE PRICE INTEGER;
        DECLARE COMPARE CHAR ;
        DECLARE I INTEGER ;
        DECLARE zeit1 INTEGER ; -- timestamp zeit von php 
        DECLARE zeit2 INTEGER ;-- database zeit
        DECLARE beschreibung CHAR; 
        SET product_id = InputRoot.JSON.Data.product_id;
        SET table_id = InputRoot.JSON.Data.table_id;
        SET namebediener = InputRoot.JSON.Data.namebediener;
        SET zeit1 = InputRoot.JSON.Data.timestamp ;
        --  write header response 
        SET OutputRoot.HTTPReplyHeader."Content-Type" = 'text/json';
        SET Environment.Destination.HTTP.RequestURL = 'http://127.0.0.1/dashboard/samples/fetch.php';
        -- create prise
         
        --  SET var.querypise[] = (SELECT * FROM Database.RESTPRISE2  AS T WHERE T.PRODUCT_ID = product_id );
         SET PRICE=  var.querypise[1];
        -- condition: the table is occupied (Y/N)?
        SET var.querytable[] = (SELECT * FROM Database.RESTCHAR1 AS T WHERE T.TABLE_ID =table_id AND  T.ZEIT > zeit1  );
        SET COMPARE = EXISTS( var.query[]);
        
         IF COMPARE= TRUE THEN 		
			SET beschreibung='the table is occupied, please order the new table';
			SET OutputRoot.JSON.Data.beschreibung = beschreibung;
			SET OutputRoot.JSON.Data.amount = PRICE;
         	SET OutputRoot.JSON.Data.timestamp =  InputRoot.JSON.Data.timestamp;
         	SET OutputRoot.JSON.Data.timestamp = NULL;
         ELSE
         	-- 300 is time reserve
         	SET zeit2 = zeit1 + 300;
         	-- delete row, where equal table_id has      	
         	DELETE FROM Database.RESTCHAR1 AS T WHERE T.TABLE_ID =table_id; 
         	        	
         	INSERT INTO Database.RESTCHAR1 (PRODUCT_ID,PRISE,NAME_RESTURANT,TABLE_ID,ZEIT)
         	 VALUES(product_id,PRICE ,namebediener,table_id,zeit2);        	 
         	 SET OutputRoot.JSON.Data.amount = PRICE;
         	 SET beschreibung='Confirmation of your ordere';
         	 SET OutputRoot.JSON.Data.beschreibung = beschreibung;
         	 SET OutputRoot.JSON.Data.timestamp =  InputRoot.JSON.Data.timestamp;
         	 SET OutputRoot.JSON.Data.timestamp = NULL;
         END IF;	
		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
